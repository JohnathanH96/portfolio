@model BatemanCafeteria.ViewModels.CateringCheckoutViewModel

@{
    ViewBag.Title = "CateringCheckout";
}

<h2>Catering Checkout</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Catering Checkout</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Reservation.res_id)
    <div class="form-group">
        @Html.LabelFor(model => model.Invoice.Customer_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Invoice.Customer_name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Invoice.Customer_email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Invoice.Customer_email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Invoice.Customer_phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Invoice.Customer_phone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Room name
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Room.room_name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Location
        </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Room.location, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>
    @Html.HiddenFor(model => model.Reservation.res_start)
    @Html.HiddenFor(model => model.Reservation.res_end)
    @Html.HiddenFor(model => model.Reservation.res_dt)
    <div class="form-group">
        <label class="control-label col-md-2">
            Please specify a time between @Model.Reservation.res_start.ToShortTimeString() and @Model.Reservation.res_end.ToShortTimeString()
        </label>
        <div class="col-md-5">
            @Html.EditorFor(model => model.SelectedTime, new { htmlAttributes = new { @class = "form-control timepicker" } })
            @Html.ValidationMessageFor(model => model.SelectedTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Instructions, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Instructions, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Instructions, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<script type="text/javascript">
    $(function () {
        $('.timepicker').wickedpicker();
    });
</script>